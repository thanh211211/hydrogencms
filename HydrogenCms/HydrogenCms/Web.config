<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<configSections>
		<section name="HydrogenCms.Models.Data.DataService" type="System.Configuration.SingleTagSectionHandler" />
		<section name="HydrogenCms.Models.Data.CachingDataContext" type="System.Configuration.SingleTagSectionHandler" />
		<section name="HydrogenCms.Models.Data.MetrixDataContext" type="System.Configuration.SingleTagSectionHandler" />

		<section name="HydrogenCms.Utilities.CodeBenchmark" type="System.Configuration.SingleTagSectionHandler" />

		<section name="HydrogenCms.Models.Data.LinqDataContext" type="System.Configuration.SingleTagSectionHandler" />

		<section name="HydrogenCms.GlobalApplication" type="System.Configuration.SingleTagSectionHandler" />

		<sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
			<sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
				<section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
				<sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
					<section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere"/>
					<section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
					<section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
					<section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication"/>
				</sectionGroup>
			</sectionGroup>
		</sectionGroup>
	</configSections>
	<appSettings/>

	<!-- 
	The data context elements in this project implement the IDataContext interface, and are implemented in a chaining methodology, 
	and can be implemented and used interchangably, as long as the final IDataContext in the chain actually goes against a data source.
	
	For example, as of 20080508, we have Caching, Metrix, Linq, and Linq to Xml objects that implement IDataContext.  One configuration
	can be:
	
	DataService -> CachingDataContext -> MetrixDataContext -> LinqDataContext.
	
	This will allow the DataService to use caching, and for each data access method not cached, metrix are stored to benchmark the data access, and 
	the final data store is a sql server database.
	
	Another example would be:
	
	DataService -> MetrixDataContext -> LinqToXmlDataContext.
	
	This is simular to the first scenario, but there is no caching.  This will give you plenty of benchmark data because none of the queries are cached. And,
	the data store is xml.
	
	The simplest is:
	
	DataService -> Linq[Xml]DataContext
	
	This allows the DataService to go directly to the data source.
	
	The recommended configuration would be:
	
	DataService -> CachingDataContext -> Linq[Xml]DataContext.
	
	This will give you optimal data access because of the caching, but you will not get any performance benchmarks, which is probably better in a prod environment anyway.	
	-->

	<!-- The provider that will be used by the data service.  This is the root of all the data access. -->
	<HydrogenCms.Models.Data.DataService dataContextType="HydrogenCms.Models.Data.CachingDataContext" />

	<!-- Caching provider.  This is a passthrough data context that requires a data store that it can pass uncached queries to. -->
	<HydrogenCms.Models.Data.CachingDataContext dataContextType="HydrogenCms.Models.Data.MetrixDataContext" enabled="true" />

	<!-- Metrix provider.  This is a passthrough data context that requires a data store that it can pass queries to, that it will record the execution times. -->
	<HydrogenCms.Models.Data.MetrixDataContext dataContextType="HydrogenCms.Models.Data.LinqXmlDataContext" />


	<!-- Code benchmark configuration. -->
	<HydrogenCms.Utilities.CodeBenchmark enabled="true" includeParameters="true" logFile="~\App_Data\CodeBenchmark.csv.txt" />

	<!-- Linq data context for database.  Mapping files are used instead of the direct dbml file to support dynamic owner (schema) and dynamic table prefixes. -->
	<HydrogenCms.Models.Data.LinqDataContext mappingFile="~/App_Data/DataContext.generic.map.xml" owner="dbo" prefix="hcms_" />

	<!-- mvc configuration.  This enables iis6 support without recompiling to change your routes. You must change the forms authentication login url if you use this option. -->
	<!-- If you are using iis6, then you need to add the .aspx extension here, and in the robots.txt file. -->
	<HydrogenCms.GlobalApplication iis6Enabled="true" />

	<connectionStrings>
		<add name="HydrogenCmsConnectionString" connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\HydrogenCms.mdf;Integrated Security=True;User Instance=True" providerName="System.Data.SqlClient" />

		<!-- sql express connection string -->
		<!-- <add name="HydrogenCmsConnectionString" connectionString="Data Source=.\SQLEXPRESS;AttachDbFilename=|DataDirectory|\HydrogenCms.mdf;Integrated Security=True;User Instance=True" providerName="System.Data.SqlClient" /> -->
		<!-- sql server connection string -->
		<!-- <add name="HydrogenCmsConnectionString" connectionString="server=mssql6.codepointlabs.com;database=gravity_hydrogen;user id=gravity_hydrogen; password=wtfopen;" providerName="System.Data.SqlClient" /> -->
	</connectionStrings>
	<system.web>
		<roleManager enabled="false" cacheRolesInCookie="false">
			<providers>
				<clear />
			</providers>
		</roleManager>

		<membership>
			<providers>
				<clear />
			</providers>
		</membership>

		<profile enabled="false" />

		<compilation debug="true">
			<assemblies>
				<add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Web.Abstractions, Version=0.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Web.Routing, Version=0.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Data.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
			</assemblies>
		</compilation>

		<authentication mode="Forms">
			<!-- If you are using iis6, then you need to add the .aspx extension here, and in the robots.txt file. -->
			<forms name=".HYDROGENAUTH" loginUrl="~/login.aspx/index" protection="All" timeout="30" path="/" slidingExpiration="true" />
		</authentication>
		
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

	    -->
		<customErrors mode="Off" defaultRedirect="GenericErrorPage.htm">
			<error statusCode="403" redirect="NoAccess.htm" />
			<error statusCode="404" redirect="FileNotFound.htm" />
		</customErrors>
	
		<pages>
			<controls>
				<add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add tagPrefix="asp" namespace="System.Web.UI.WebControls" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			</controls>
			<namespaces>
				<add namespace="System.Web.Mvc"/>
				<add namespace="System.Web.Routing"/>
				<add namespace="System.Linq"/>
				<add namespace="System.Collections.Generic"/>
			</namespaces>
		</pages>
		<httpHandlers>
			<remove verb="*" path="*.asmx"/>
			<add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false"/>

			<!-- metaweblog, file, and image handlers.  Taken from blogengine.net -->
			<add verb="*" path="metaweblog.axd" type="HydrogenCms.API.MetaWeblog.MetaWeblogHandler, HydrogenCms" validate="false"/>
			<add verb="*" path="file.axd" type="HydrogenCms.Handlers.FileHandler" validate="false"/>
			<add verb="*" path="image.axd" type="HydrogenCms.Handlers.ImageHandler" validate="false"/>
		</httpHandlers>
		<httpModules>
			<add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="UrlRoutingModule" type="System.Web.Routing.UrlRoutingModule, System.Web.Routing, Version=0.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
		</httpModules>
	</system.web>
	<system.codedom>
		<compilers>
			<compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
				<providerOption name="CompilerVersion" value="v3.5"/>
				<providerOption name="WarnAsError" value="false"/>
			</compiler>
			<compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" warningLevel="4" type="Microsoft.VisualBasic.VBCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
				<providerOption name="CompilerVersion" value="v3.5"/>
				<providerOption name="OptionInfer" value="true"/>
				<providerOption name="WarnAsError" value="false"/>
			</compiler>
		</compilers>
	</system.codedom>
	<!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false"/>
		<modules runAllManagedModulesForAllRequests="true">
			<remove name="ScriptModule"/>
			<remove name="UrlRoutingModule"/>
			<add name="ScriptModule" preCondition="managedHandler" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="UrlRoutingModule" type="System.Web.Routing.UrlRoutingModule, System.Web.Routing, Version=0.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
		</modules>
		<handlers>
			<remove name="WebServiceHandlerFactory-Integrated"/>
			<remove name="ScriptHandlerFactory"/>
			<remove name="ScriptHandlerFactoryAppServices"/>
			<remove name="ScriptResource"/>
			<add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			<add name="MvcScriptMap" preCondition="classicMode,bitness32" verb="*" path="*.mvc" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v2.0.50727\aspnet_isapi.dll"/>
			<add name="MvcScriptMap64" preCondition="classicMode,bitness64" verb="*" path="*.mvc" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v2.0.50727\aspnet_isapi.dll"/>
			<add name="UrlRoutingHandler" preCondition="integratedMode" verb="*" path="UrlRouting.axd" type="System.Web.HttpForbiddenHandler, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

			<add name="HydrogenMetaweblogHandler" verb="*" path="metaweblog.axd" type="HydrogenCms.API.MetaWeblog.MetaWeblogHandler, HydrogenCms" />
			<add name="HydrogenFileHandler" verb="*" path="file.axd" type="HydrogenCms.Handlers.FileHandler" />
			<add name="HydrogenImageHandler" verb="*" path="image.axd" type="HydrogenCms.Handlers.ImageHandler" />
		</handlers>
	</system.webServer>

	<!-- As of 20080508, we only have one user, and that user is the system administrator.  If you are logged in, then you are an administrator.  So, deny anonymous from the admin section, and we should be good to go.  This may change in the future. -->
	<location path="admin">
		<system.web>
			<authorization>
				<deny users="?" />
			</authorization>
		</system.web>
	</location>

	<location path="admin.aspx">
		<system.web>
			<authorization>
				<deny users="?" />
			</authorization>
		</system.web>
	</location>

</configuration>
